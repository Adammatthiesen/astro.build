---
import Section from './Section.astro';
const { padTop = false, background, blobs = true, color } = Astro.props;
---

<Section class={`quote ${padTop ? 'pad-top' : ''}`.trim()} background={background} style={color ? `--color: ${color};` : ''}>
    {blobs && <div class="glow" />}

    <div class="logo">
        <slot name="logo" />
    </div>
    <blockquote class="container">
        <p class="head-md"><slot name="quote" /></p>
        <cite class="head-md"><slot name="cite" /></cite>
    </blockquote>
</Section>

<style>
.quote {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    position: relative;
    color: var(--color, var(--color-dusk));
    padding-top: var(--size-1000);
    padding-bottom: calc(var(--size-1000) * 2);
    z-index: 0;
}
.pad-top {
    padding-top: calc(var(--size-1000) * 2);
}

blockquote {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    text-align: center;
    font-weight: bold;
    padding: 4rem 2rem;
    font-size: inherit;
    margin: 0 auto;
    max-width: 85ch;
}
cite {
    margin-top: 2rem;
    font-style: normal;
    font-size: var(--size-600);
}
.logo > :global(a) {
    padding: 1rem;
    display: inline-flex;
}
.glow {
    pointer-events: none;
    --time: 10s;
    position: absolute;
    --size: 256px;
    width: calc(var(--size) * 3);
    border-radius: 50%;
    opacity: 0.25;
    mix-blend-mode: hard-light;
    height: var(--size);
    background: var(--blob-color, var(--gradient-pop-4));
    animation: glow var(--time) ease-in-out infinite;
    filter: blur(128px);
    z-index: -1;
}
.glow::before,
.glow::after {
    content: "";
    display: block;
    position: absolute;
    --size: 12rem;
    width: var(--size);
    height: var(--size);
    border-radius: 50%;
    background: var(--blob-color, var(--gradient-pop-4));
}

.glow::before {
    opacity: 1;
    animation: glow-before calc(var(--time) * 1.5) ease-in-out infinite;
}

.glow::after {
    animation: glow-after calc(var(--time) * 5) ease-in-out infinite;
}

@media (prefers-reduced-motion: reduce) {
    .glow, .glow::before, .glow::after {
        animation-play-state: paused;
    }
}

@keyframes glow {
    0%, 100% {
        transform: scale(1.2) translateX(0) rotate(5deg);
    }
    50% {
        transform: scale(1.4) translateX(10%);
    }
}

@keyframes glow-before {
    0%, 100% {
        transform: scale(0.9) translate(100%, 0) rotate(-10deg);
    }
    50% {
        transform: scale(1.3) translate(120%, 50%);
    }
}

@keyframes glow-after {
    0%, 100% {
        transform: scale(0.67) translate(-50%, 0%) rotate(-180deg);
    }
    50% {
        transform: scale(2) translate(50%, 25%) rotate(-180deg);
    }
}
@media (min-width: 64rem) {
    blockquote {
        padding: 0 8rem;
    }
}
</style>
