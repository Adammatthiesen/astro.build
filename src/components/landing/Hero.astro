<section class="hero">
    <div class="background">
        <div class="blob-a" />
        <div class="blob-b" />
        <div class="blob-c" />
        <div class="grid" />
    </div>
    <div class="container content">
        <h2 class="text-gradient"><slot name="title" /></h2>
        <p><slot name="tagline" /></p>
        <div class="cta container">
            <slot />
        </div>
    </div>
</section>

<style>
    .hero {
        position: relative;
        background: var(--color-tan) linear-gradient(180deg, var(--color-tan), var(--color-tan) 10rem, #D8C5EF, rgba(225,213,238,0) 100%);
        padding: 3rem 0;
        padding-bottom: 256px;
        z-index: 0;
    }

    .content {
        margin-top: 5rem;
        text-align: center;
        color: rgba(34, 34, 34, 0.8);
    }
    
    h2 {
        --fill: var(--gradient-pop-1);
        font-size: min(calc(5vw + 3rem), 6.5rem);
        font-family: var(--font-display);
        line-height: 1.1;
        margin-bottom: 1.25rem;
    }
    p {
        font-size: min(calc(1vw + 1rem), 1.5rem);
        max-width: min(64ch, calc(100% - 1rem));
        margin-left: auto;
        margin-right: auto;
        margin-bottom: 1.5em;
    }
    .cta {
        position: absolute;
        left: 0;
        right: 0;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 1em;
    }

    .background {
        --time: 25s;
        --blur: blur(128px);
        --aspect-ratio: 16 / 9;
        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        overflow: hidden;
        pointer-events: none;
        z-index: -1;
        backface-visibility: hidden;
        transform: translate3d(0,0,0);
    }

    .grid {
        --time: 7s;
        --grid-size: 4em;
        --grid-color: #000;
        --grid-stroke: 1px;
        opacity: 0.5;
        mix-blend-mode: hard-light;
        position: absolute;
        bottom: -30%;
        left: 0;
        margin-left: -50%;
        width: 200%;
        height: 100%;
        background-position-y: 0px;
        background-image: repeating-linear-gradient(90deg, var(--grid-color, white) 0%, transparent calc(1px + var(--grid-stroke, 0px)), transparent var(--grid-size), var(--grid-color, white) calc(var(--grid-size) + 1px + var(--grid-stroke, 0px))), repeating-linear-gradient(180deg,var(--grid-color, white) 0%,transparent calc(1px + var(--grid-stroke,0px)), transparent var(--grid-size),var(--grid-color, white) calc(var(--grid-size) + 1px + var(--grid-stroke, 0px)));
        transform: perspective(50vh) rotateX(60deg) translateZ(10px) translateY(-1px);
        animation: moving-grid var(--time) infinite linear;
        z-index: 1;
        filter: invert(1);
    }

    @keyframes moving-grid {
        0%{
            transform:perspective(50vh) rotateX(60deg) translateZ(10px) translateY(-var(--grid-size));
        }
        100%{
            transform:perspective(50vh) rotateX(60deg) translateZ(10px) translateY(var(--grid-size));
        }
    }

    .blob-a {
        display: block;
        position: absolute;
        top: 67%;
        right: -50%;
        margin-left: -50%;
        min-width: 1280px;
        width: 200%;
        aspect-ratio: var(--aspect-ratio);
        border-radius: 50%;
        transform-origin: center center;
        filter: var(--blur);
        background: linear-gradient(-170deg, #FF9900 0%, #AD00FF 30.71%, #0029FF 37.67%, #6D39FF 49.54%);
        z-index: 0;
        animation: blob-a calc(var(--time) * 3.5) ease-in-out infinite;
    }

    .blob-b {
        content: '';
        display: block;
        position: absolute;
        top: 67%;
        right: -50%;
        margin-left: -50%;
        min-width: 1280px;
        width: 200%;
        aspect-ratio: var(--aspect-ratio);
        border-radius: 50%;
        background: red;
        transform-origin: center center;
        background: linear-gradient(259deg, #FF9900 0%, #AD00FF 30.71%, #0029FF 37.67%, #6D39FF 49.54%);
        filter: var(--blur);
        z-index: -1;
        animation: blob-b calc(var(--time) * 2.5) ease-in-out infinite;
    }

    .blob-c {
        content: '';
        display: block;
        position: absolute;
        top: 50%;
        left: -50%;
        margin-left: -50%;
        min-width: 1280px;
        width: 200%;
        aspect-ratio: var(--aspect-ratio);
        border-radius: 50%;
        background: red;
        transform-origin: center center;
        background: linear-gradient(-180deg, #FF9900 0%, #AD00FF 30.71%, #0029FF 37.67%, #6D39FF 49.54%);
        filter: var(--blur);
        z-index: 1;
        animation: gradient-c var(--time) ease-in-out alternate infinite;
    }

    @keyframes blob-a {
        0% {
            transform: rotate(5deg) translate(33%, -10%) scale(0.6);
        }
        67% {
            transform: rotate(5deg) translate(12.5%, -6.7%) scale(0.9);
        }
        100% {
            transform: rotate(0deg) translate(-2%, 4%) scale(0.8);
        }
    }

    @keyframes blob-b {
        0% {
            opacity: 0;
            transform: rotate(-12deg) translate(-33%, -5%) scale(1);
        }
        50% {
            opacity: 1;
        }
        100% {
            opacity: 0;
            transform: rotate(0deg) translate(50%, 5%) scale(0.9);
        }
    }

    @keyframes blob-c {
        0% {
            transform: rotate(5deg) translate(0, 0) scale(0.8);
        }
        100% {
            transform: rotate(-15deg) translate(15%, 7%) scale(0.8);
        }
    }

    @supports not (aspect-ratio: 1 / 1) {
        .blob-a::before,
        .blob-b::before,
        .blob-c::before {
            float: left;
            padding-top: calc(100% * var(--aspect-ratio));
            content: "";
        }

        .blob-a::after,
        .blob-b::after,
        .blob-c::after {
            display: block;
            content: "";
            clear: both;
        }
    }
</style>
