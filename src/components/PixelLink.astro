---
const { class: className = '', href } = Astro.props;
// Wrap in <span> because Houdini is disabled for a[href] for security

const { variant = 'primary' } = Astro.props;
---

<span class={`link pixel variant-${variant} ${className}`.trim()}>
    <a {href}>
        <slot />
    </a>
</span>

<style>
    .link {
        --border-radius: 8;
        --duration: 200ms;
        --delay: 30ms;
        --background: linear-gradient(180deg, var(--link-color-stop-a), var(--link-color-stop-b));
        display: flex;
        color: white;
        font-family: var(--font-display);
        font-size: 1.5rem;
        width: max-content;
        transition-property: transform, --link-color-stop-a, --link-color-stop-b;
        transition-duration: var(--duration);
        transition-delay: var(--delay);
        transition-timing-function: cubic-bezier(0.22, 1, 0.36, 1);
    }
    .link:hover,
    .link:focus-within {
        transform: translateY(calc(var(--pixel-size) * -0.5px));
    }
    .link:active {
        transform: translateY(0);
    }
    a {
        display: flex;
        padding: 0.67rem 2.5rem;
        width: 100%;
        height: 100%;
        text-decoration: none;
        color: inherit;
    }

    .variant-primary {
        --variant: primary;
        --background: linear-gradient(180deg, var(--link-color-stop-a), var(--link-color-stop-b));
    }
    .variant-primary:hover,
    .variant-primary:focus-within {
        --link-color-stop-a: #6D39FF;
        --link-color-stop-b: #AF43FF;
    }
    .variant-primary:active {
        --link-color-stop-a: #5F31E1;
        --link-color-stop-b: #A740F3;
    }

    .variant-outline {
        --variant: outline;
        --background: white;
    }
    .variant-outline > a::before {
        position: absolute;
        top: 0;
        right: calc(var(--pixel-size) * 1px);
        bottom: 0;
        left: calc(var(--pixel-size) * 1px);
        content: "";
        display: block;
        transform-origin: bottom center;
        background: linear-gradient(to top, var(--background), rgba(255, 255, 255, 0));
        opacity: 0.4;
        transform: scaleY(0);
        transition: transform 120ms cubic-bezier(0.22, 1, 0.36, 1);
    }
    .variant-outline:hover > a::before,
    .variant-outline:focus-within > a::before {
        transform: scaleY(1);
    }
    .variant-outline:active > a::before {
        opacity: 0.6;
        transform: scaleY(1);
    }
</style>
