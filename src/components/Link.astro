---
const { class: className = '', href } = Astro.props;
// Wrap in <span> because Houdini is disabled for a[href] for security
---

<span class={`link pixel ${className}`.trim()}>
    <a {href}>
        <slot />
    </a>
</span>

<style>
    .link {
        --border-radius: 8;
        --duration: 200ms;
        --delay: 30ms;
        --background: linear-gradient(180deg, var(--link-color-stop-a), var(--link-color-stop-b));
        display: flex;
        color: white;
        font-family: var(--font-display);
        font-size: 1.5rem;
        width: max-content;
        transition-property: transform, --link-color-stop-a, --link-color-stop-b;
        transition-duration: var(--duration);
        transition-delay: var(--delay);
        transition-timing-function: cubic-bezier(0.22, 1, 0.36, 1);
    }
    .link:hover,
    .link:focus-within {
        --link-color-stop-a: #6D39FF;
        --link-color-stop-b: #AF43FF;
        transform: translateY(calc(var(--pixel-size) * -0.5px));
    }
    .link:active {
        --link-color-stop-a: #5F31E1;
        --link-color-stop-b: #A740F3;
        transform: translateY(0);
    }
    .link:hover a::after,
    .link:focus-within a::after {
        opacity: 1;
        transform: scaleX(1);
    }
    .link:active a::after {
        transform: scaleX(0);
    }
    .link a::after {
        content: '';
        opacity: 0;
        display: block;
        position: absolute;
        height: calc(var(--pixel-size) * 1px);
        bottom: calc(var(--border-radius) * -1px);
        left: calc(var(--pixel-size) * 1px);
        right: calc(var(--pixel-size) * 1px);
        background: white;
        mix-blend-mode: overlay;
        transform-origin: center;
        transform: scaleX(0);
        transition-property: transform, opacity;
        transition-duration: var(--duration);
        transition-timing-function: cubic-bezier(0.22, 1, 0.36, 1);
    }
    a {
        display: flex;
        padding: 0.67rem 2.5rem;
        width: 100%;
        height: 100%;
        text-decoration: none;
        color: inherit;
    }
</style>
